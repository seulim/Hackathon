@{
	Layout = "~/Views/Shared/_Layout_320.cshtml";
	string pCache = this.GetPCache();
}
@using GMKT.GMobile.Data;
@using GMKT.GMobile.Web.Models;
@model ECouponBrandHomeModel
@section Css {
	<link rel="stylesheet" type="text/css" href="@Urls.StyleUrlV2/etc.css" />
}

	<!-- CONTENT -->
    @*
	<div id="content" class="ctns">
		<div class="brand_logo">
			<!--a href="#" class="prev">이전</a-->
			<h4><a href="javascript:document.location.reload();">@if (!String.IsNullOrEmpty(Model.BrandImageUrl)) { <img src="@Model.BrandImageUrl" alt="@Model.BrandName" class="img" /> } <span class="name">@Model.BrandName</span></a></h4>
		</div>
    WPR-1762로 삭제 예정*@
    <!-- CONTENT WPR-1762 start -->
	<div id="content" class="ecpn">
		<div class="ecpn_state dep"><!--[D]소분류일때 dep추가-->
			<h3><a href="/Ecoupon">e쿠폰</a></h3>
			<h4><a href="/ecoupon/BrandLp?categoryCode=@Model.CategoryCode"><span>@Model.CategoryName</span></a></h4>
			<h5 class="cur"><a href="#"><span>@Model.BrandName</span></a>
				<ul>
                @{
                    foreach (ECouponBrandModel brand in Model.BrandList)
                    {
				    <li id="li_brand" data-brandcode="@brand.BrandCode"><a href="/ecoupon/Brand?categoryCode=@Model.CategoryCode&brandCode=@brand.BrandCode">@brand.BrandName</a></li>
                    }
                }
				</ul>
			</h5>
		</div>
        <h4 class="brand_logo"><a href="javascript:document.location.reload();">@if (!String.IsNullOrEmpty(Model.BrandImageUrl)) { <img src="@Model.BrandImageUrl" alt="@Model.BrandName" class="img" /> } <span class="name">@Model.BrandName</span></a></h4>
		@{
            if (@Model.HotBrandMenuItemList.Count > 0)
            {
        <section class="bx_sect mh sec2">
			<h4>HOT</h4>
			<div class="lst_ecpn_prd">
			<ul id="lst_ecpn">
                @foreach (ECouponBrandMenuItemModel hotMenuItem in @Model.HotBrandMenuItemList)
                {
					decimal discountedPrice = hotMenuItem.ItemInfo.SellPrice - hotMenuItem.ItemInfo.DiscountPrice;
			    <li id="li_hot_menu_item" data-menuseq="@hotMenuItem.MenuSeq" itemNo="@hotMenuItem.ItemInfo.ItemNo" sellPrice="@discountedPrice">
				    <div class="li_w">
					    <div class="img"><a href="#" id="link_vip" data-viplink="@hotMenuItem.ItemInfo.VipUrl"><img src="@hotMenuItem.MenuLoadingImageUrl" id="img_menu" data-origin="@hotMenuItem.MenuImageUrl" alt="@hotMenuItem.MenuName"  /><div id="div_rate" data-discountrate="@hotMenuItem.ItemInfo.DiscountRate"></div></a></div>
					    <div class="nt" id="itemName">@hotMenuItem.MenuName</div>
					    <div class="count">
						    <span class="ori_price" id="originprice" style='display:none'><span class="blind">정가</span>@hotMenuItem.ItemInfo.OriginalPrice</span>
						    <strong id="strong_sellprice"><span class="blind">할인가</span>@hotMenuItem.ItemInfo.Price</strong><span class="won">원</span><!--할인적용가 Price-->
					    </div>
					    <div class="buy_ln">
						    <button type="button" class="btn_c" id="btn_addList"><span>선물하기</span></button>
					    </div>
				    </div>
			    </li>
                }
			</ul>
			</div>
		</section>
            }
        }
        <!-- CONTENT WPR-1762 end -->

		<div class="gds_list">
		<!--<div class="bot_ordbx" id="divPreCart" style="display:none;"> WPR-1762로 삭제 예정-->
        <div class="bot_ordbx" id="divPreCart" style="display:none;"><!--[D] 임시 display:none WPR-1762-->
				<div class="bot_lst_wrap" id="bot_lst_wrap">
					<div class="scroll_box">
						<ul class="bot_lst" id=ul_preCart>
						<li id=li_preCartTemplete style="display:none;">
							<strong>$$ItemName$$</strong>
							<div class="amount_set">
								<label for="txtOrderQty" class="blind">수량</label>
								<input type="text" id="txtOrderQty" value="1" class="input_txt" onkeyup="javascript:checkOrderQty(this);" maxlength="3">
								<button class="btn_down" onclick='minusQty(this);'><span class="sp_del">수량감소</span></button>
								<button class="btn_up" onclick='plusQty(this);'><span class="sp_del">수량증가</span></button>
							</div>
							<div class="price_box">
								<strong id="preCartItemTotalPrice">$$ItemTotalPrice$$</strong><span>원</span>
							</div>
							<button type="button" class="btn_cls" onclick='removeItemFromPreCart(this);';>선택 상품 삭제</button>
						</li>
						</ul>
					</div>
				</div>
				<div class="bot_order">
					<div class="bot_td">
						<p class="ord_price"><span class="fwb" id=preCartItemTotalPriceSum>0</span><span>원</span></p>
					</div>
					<div class="bot_td">
						<a href="javascript:orderPreCart();" class="btn_order">선물하기</a>
					</div>
				</div>
				<button type="button" class="btn_proview selected" id='btnPreview' onclick='togglePreview(this);'><span>선택상품보기</span></button>
			</div>
			<ul id="ul_gds_list">
            @{
                foreach (ECouponBrandMenuItemModel menuItem in Model.BrandMenuItemList)
                {
					decimal discountedPrice = menuItem.ItemInfo.SellPrice - menuItem.ItemInfo.DiscountPrice;
				 <li id="li_menu" data-menuseq="@menuItem.MenuSeq" itemNo="@menuItem.ItemInfo.ItemNo" sellPrice="@discountedPrice">
						<div class="li_w">
							<div class="img"><a href="#" id="link_vip" data-viplink="@menuItem.ItemInfo.VipUrl"><img src="@menuItem.MenuLoadingImageUrl" id="img_menu" data-origin="@menuItem.MenuImageUrl" alt="@menuItem.MenuName" /><div id="div_rate" data-discountrate="@menuItem.ItemInfo.DiscountRate"></div></a></div>
							<div class="nt" id="itemName">@menuItem.MenuName</div>
							<div class="count">
								<span class="ori_price" id="originprice" style='display:none'><span class="blind">정가</span>@menuItem.ItemInfo.OriginalPrice</span>
								<strong id="strong_sellprice"><span class="blind">할인가</span>@menuItem.ItemInfo.Price</strong><span class="won">원</span>
							</div>
							<div class="buy_ln">
								<button type="button" class="btn_c" id="btn_addList"><span>선물하기</span></button>
							</div>
							<!--<div class="sold_out" style="display:none"; id="div_soldout"><span>품절되었습니다.</span></div>-->						</div>
					</li>
                }
            }
			</ul>
            <a href="#" class="btn_more" onclick="moreList(); return false;">목록 더보기</a><!-- WPR-1762 --> 

		</div>
@* 
@if (!PageAttr.IsIphone && !PageAttr.IsIpad && !PageAttr.IsIpod)
{
	if (PageAttr.IsAndroidApp)
	{
		<div class="ecpn_home"><a onclick="sendScheme()"><em>기프트</em> 홈화면 바로가기 추가</a></div>   
	}
	else
	{			    
		<div class="ecpn_home"><a onclick="checkApplicationInstall()"><em>기프트</em> 홈화면 바로가기 추가</a></div>
	}
} 
WPR-1762로 삭제 예정*@
		
	</div>
	<!-- //CONTENT --><script id="list-template" type="text/x-handlebars-template">
{{#each BrandMenuItemList}}
	<li id="li_menu" data-menuseq="{{MenuSeq}}" itemNo="{{ItemInfo.ItemNo}}" sellPrice="{{getDiscountedPrice ItemInfo}}">
		<div class="li_w">
			<div class="img"><a href="#" id="link_vip" data-viplink="{{ItemInfo.VipUrl}}"><img src="{{MenuLoadingImageUrl}}" id="img_menu" data-origin="{{MenuImageUrl}}" alt="{{MenuName}}" /><div id="div_rate" data-discountrate="{{ItemInfo.DiscountRate}}"></div></a></div>
			<div class="nt" id="itemName">{{MenuName}}</div>
			<div class="count">
				<span class="ori_price" id="originprice" style='display:none'><span class="blind">정가</span>{{ItemInfo.OriginalPrice}}</span>
				<strong id="strong_sellprice"><span class="blind">할인가</span>{{ItemInfo.Price}}</strong><span class="won">원</span>
			</div>
			<div class="buy_ln">
				<button type="button" class="btn_c" id="btn_addList"><span>선물하기</span></button>
			</div>
			<!--<div class="sold_out" style="display:none"; id="div_soldout"><span>품절되었습니다.</span></div>-->		</div>
	</li>
{{/each}}
</script><script type="text/javascript" src="@Urls.ScriptUrl/js/mobile/main/common/iscroll.js"></script>
<script type="text/javascript" src="@Urls.ScriptUrl/js/mobile/main/common/jquery.bxslider.js"></script>

<script type="text/javascript">
	//Handlebar Helpers
	function registerECouponHelpers() {
		Handlebars.registerHelper('getDiscountedPrice', getDiscountedPrice);
	}

	function getDiscountedPrice(itemInfo) {
		return itemInfo.SellPrice - itemInfo.DiscountPrice;
	}

	$(document).ready(function () {
		try {
			displayLayer("progress_icon", "none");
		}
		catch(e) {}

        //브랜드홈 초기화
        brandHomeInit();
		registerECouponHelpers();

        //목록더보기 초기화
        if (parameters.needMoreButton()) {
		    $('.btn_more').css('visibility', 'visible');
	    }
		else {
            $('.btn_more').css('visibility', 'hidden');
		}
		//GetItemTopOne();  사용하지 않음
	});

    //브랜드홈 초기화
    function brandHomeInit()
    {
        //네비게이터 초기화
        brandNaviInit();

        //아이템 초기화
        menuItemInit();
    }

    //네비게이터 초기화
    function brandNaviInit() {
        $('div .ecpn_state').find('#li_brand').each(function (index, element) {
            if ($(element).data('brandcode') == @Model.BrandCode)
            {
                   $(element).addClass('cur');
            }
        });
    }

    //브랜드아이템 초기화
    function menuItemInit(){
        //hot 아이템 초기화 
        $('div #lst_ecpn').find('#li_hot_menu_item').each(function(index, element){
            //이미지로딩
            if ($(element).find('img').data('origin')) {
			    $(element).find('#img_menu').prop('src', $(element).find('img').data('origin'));
			}

            // Price
			//$(elementctrl).find('#strong_sellprice').html("<span class='blind'>할인가</span>" + addCommars(data.SellPrice));
			//$(elementctrl).find('#originprice').html("<span class='blind'>정가</span>" + addCommars(data.DealPrice));

            //할인율체크
            if ($(element).find('#div_rate').data('discountrate') && $(element).find('#div_rate').data('discountrate') > 0)
            {
				$(element).find('#div_rate').html($(element).find('#div_rate').data('discountrate') + "<span>%</span>");
				$(element).find('#div_rate').addClass("dc");
				$(element).find('#originprice').show();
            }

            if ($(element).find('#link_vip').data('viplink') == '') 
            {
                $(element).find('#btn_addList').attr('disabled', 'disabled');
            }

            $(element).find('#link_vip').prop('href', 'javascript:GoVip("'+ $(element).find('#link_vip').data('viplink') + '");');
			$(element).find('#btn_addList').attr('onclick', 'javascript:AddPreCart(this, "' + $(element).attr('itemNo') + '", "' + $(element).attr('sellPrice') + '", "' + escape($(element).find('#itemName').text()) + '", "' + $(element).find('#link_vip').data('viplink') + '");');
        });

        //일반 아이템 초기화
        $('div .gds_list').find('#li_menu').each(function (index, element) {
            //이미지로딩
            if ($(element).find('img').data('origin')) {
			    $(element).find('#img_menu').prop('src', $(element).find('img').data('origin'));
			}

            if ($(element).find('#div_rate').data('discountrate') && $(element).find('#div_rate').data('discountrate') > 0)
            {
				$(element).find('#div_rate').html($(element).find('#div_rate').data('discountrate') + "<span>%</span>");
				$(element).find('#div_rate').addClass("dc");
				$(element).find('#originprice').show();
            }

            if ($(element).find('#link_vip').data('viplink') == '') 
            {
                $(element).find('#btn_addList').attr('disabled', 'disabled');
            }
            $(element).find('#link_vip').prop('href', 'javascript:GoVip("'+ $(element).find('#link_vip').data('viplink') + '");');
			$(element).find('#btn_addList').attr('onclick', 'javascript:AddPreCart(this, "' + $(element).attr('itemNo') + '", "' + $(element).attr('sellPrice') + '", "' + escape($(element).find('#itemName').text()) + '", "' + $(element).find('#link_vip').data('viplink') + '");');
 
        });
    }

    //paging 관련 함수 시작
    var parameters = function(){};
    parameters.defaultParameters = {
        brandCode : @Model.BrandCode,
        pageIndex : 1,
        pageSize : 100
    }

    parameters.totalSize = @Model.MenuItemTotalCount;

    parameters.setTotalSize = function(size){
       parameters.totalSize = size; 
    }

    parameters.setPageIndex = function(){
        parameters.defaultParameters.pageIndex = parameters.getPageIndex() + 1; 
    }

    parameters.getPageIndex = function(){
        return parameters.defaultParameters.pageIndex;
    }

    parameters.needMoreButton = function(){
        return parameters.defaultParameters.pageSize *  parameters.defaultParameters.pageIndex < parameters.totalSize;
    }

    //목록더보기
    var moreList = function(){
        parameters.setPageIndex();
        displayMoreList("/ecoupon/GetBrandHomeMenuMore");
    }

    var displayMoreList = function(url){
        $.ajax({
		    type: 'GET',
		    url: url,
		    data: parameters.defaultParameters,
		    //contentType: "application/x-www-form-urlencoded",
		    xhrFields: {
			    withCredentials: true
		    },
		    success: function (result) {
                //parameters.setTotalSize(result.Data.TotalSize);

			    var source = $('#list-template').html();
			    var template = Handlebars.compile(source);
			    $('#ul_gds_list').append(template(result.Data));
                menuItemInit();
			    if (parameters.needMoreButton()) {
				    //$('.btn_more').show();
                    $('.btn_more').css('visibility', 'visible');
			    }
			    else {
                    //$('.btn_more').hide();
                    $('.btn_more').css('visibility', 'hidden');
			    }
		    }
	    });
    }
    //paging 관련 함수 끝

	var myScroll;	
	function loaded() {
		myScroll = new iScroll('bot_lst_wrap', { hScrollbar: false, vScrollbar: true, checkDOMChanges: true});
		myScroll.scrollTo(0);
			setTimeout(function() {      
			myScroll.refresh();
			}, 100);
	}

	document.addEventListener('DOMContentLoaded', function () { setTimeout(loaded, 200); }, false);

	function GetItemTopOne() {
		$('div .gds_list').find('#li_menu').each(function (index, element) {
			var menuseq = $(element).data('menuseq') ? $(element).data('menuseq') : 0;
			var itemName = $(element).find('#itemName').text();

			(function (seqid, elementctrl) {
				$.post( "/ecoupon/GetItemTopOne?@pCache"+seqid, {menuseq: seqid}, function( data ) {

					$(elementctrl).attr(
						{
							'itemNo': data.ItemNo
							, 'sellPrice': data.SellPrice
						}
					);

					if ($(elementctrl).find('img').data('origin')) {
						$(elementctrl).find('#img_menu').prop('src', $(element).find('img').data('origin'));
					}

					// Price
					$(elementctrl).find('#strong_sellprice').html("<span class='blind'>할인가</span>" + addCommars(data.SellPrice));
					$(elementctrl).find('#originprice').html("<span class='blind'>정가</span>" + addCommars(data.DealPrice));
						
					// Discount Option
					if (data.DiscountRate && data.DiscountRate > 0) {
						$(elementctrl).find('#div_rate').html(data.DiscountRate + "<span>%</span>");
						$(elementctrl).find('#div_rate').addClass("dc");
						$(elementctrl).find('#originprice').show();
					}

					// Item Not Found (Not Exist in Voyager)
					if (data.VipUrl == '') {
						$(elementctrl).find('#div_soldout').show();
						$(elementctrl).find('#btn_addList').attr('disabled', 'disabled');
					}

					$(elementctrl).find('#link_vip').prop('href', 'javascript:GoVip("'+ data.VipUrl + '");');
					$(elementctrl).find('#btn_addList').attr('onclick', 'javascript:AddPreCart(this, "' + data.ItemNo + '", "' + data.SellPrice + '", "' + escape(itemName) + '", "' + data.VipUrl + '");');

				});
			})(menuseq, element);
		});
	}

	function checkOrderQty(obj) {
		obj.value=obj.value.replace(/[^0-9]/g,'');

		var liPreCart = $(obj).closest('[id^=li_preCart_]');

		setPreCartItemTotalPrice(liPreCart, liPreCart.attr('sellPrice'), obj.value);
		setPreCartItemTotalPriceSum();
	}

	// AddCart By Nova
	function GetAddCartResult(itemNo, orderQty) {
		var param = {
			itemNo: itemNo
			, orderQty : orderQty
			, isInstantOrder : true
		}

		var retValue; // OrderIdx

		$.ajax({
			url : "/ecoupon/GetAddCartResult"
			, type : 'POST'
			, async : false
			, data : param
			, success : function( retData ) {

					if (retData.ResultCode == 0 && retData.Data == null) {	// api 호출 자체가 실패하는경우 등
						alert(retData.Message);
					}
					else {
						if (retData.ResultCode != 0) {  // 장바구니 오류
						
							var liPreCart = $('#li_preCart_' + itemNo);
							var itemName = unescape(liPreCart.attr('itemName'));

							if (retData.Data.Result != null && retData.Data.Result != "undefinded") {
								if (retData.Data.Result.ReturnCode == "815") { // 장바구니 갯수 초과인 경우에는 상품명을 보여주지 않음
									alert(retData.Message);
								}
								else if (retData.Data.Result.ReturnCode == "209") { // 구매제한상품인경우(장바구니에담을수없는상품)
									if(confirm('[' + itemName + '] 본 상품은 복수 구매가 불가 합니다. 상품상세 정보로 이동하시겠습니까?'))
									{
										GoVip(liPreCart.attr('vipUrl'));
										return false;
									}
								}
								else {
									alert('[' + itemName + '] ' + retData.Message);
								}

								if (retData.Data.Result.ReturnCode == "212") {		// 구매제한 인 경우 구매갯수 셋팅
									var limitedQty = retData.Data.Result.ReturnValue;
									liPreCart.find('#txtOrderQty').attr('value', limitedQty);
									setPreCartItemTotalPrice(liPreCart, liPreCart.attr('sellPrice'), limitedQty);
									setPreCartItemTotalPriceSum();
								}
							}
							else {
								alert('[' + itemName + '] ' + retData.Message);
							}
						}

						retValue = retData;
					}
				}
			, error : function(e) {
				alert(e.statusText);
				//alert(e.responsetext);
			}
		});

		return retValue;
	}

	// Add PreCart
	function AddPreCart(obj, itemNo, sellPrice, itemName, vipUrl) {
        
        //alert(itemNo + "//" + sellPrice + "//" + itemName + "//" + vipUrl);

		if (!isLogin() || !isMember()) { goLogin(); }

		btn = $(obj);
		btn.toggleClass('checked');

		if (btn.hasClass('checked')) {
			// preCart 에 추가
			var li_preCartNew = $('#li_preCartTemplete').clone();
			li_preCartNew.show();

			li_preCartNew.attr(
				{
					'id': 'li_preCart_' + itemNo
					, 'itemNo': itemNo
					, 'sellPrice': sellPrice
					, 'itemName': itemName
					, 'vipUrl': vipUrl
				}
			);
			li_preCartNew.html(li_preCartNew.html().replace('$$ItemName$$', unescape(itemName)).replace('$$ItemTotalPrice$$', addCommars(sellPrice)));

			$('#ul_preCart').append(li_preCartNew);
		}
		else {
			// preCart 에서 삭제
			$('#li_preCart_' + itemNo).remove();
		}

		setPreCartItemTotalPriceSum();
		setVisiblePreCartLayer();
	}

	function minusQty(obj) {
		
		// Note2 에서 이벤트가 2번 발생하는 것에 대한 대응
		$(obj).attr('disabled',true);
		var setAtt = function(){
			setTimeout(function(){
				$(obj).attr('disabled',false)
			},500);
		}
		setAtt(obj);

		var li_preCart = $(obj).closest('[id^=li_preCart]');
		var txtOrderQty = li_preCart.find('#txtOrderQty');

		var currentQty = txtOrderQty.attr('value');
		if (currentQty > 1) {
			txtOrderQty.attr('value', parseInt(currentQty) - 1);
		}

		setPreCartItemTotalPrice(li_preCart, li_preCart.attr('sellPrice'), txtOrderQty.attr('value'));
	}

	function plusQty(obj) {

		// Note2 에서 이벤트가 2번 발생하는 것에 대한 대응
		$(obj).attr('disabled',true);
		var setAtt = function(){
			setTimeout(function(){
				$(obj).attr('disabled',false)
			},500);
		}
		setAtt(obj);

		var li_preCart = $(obj).closest('[id^=li_preCart]');
		var txtOrderQty = li_preCart.find('#txtOrderQty');

		var currentQty = txtOrderQty.attr('value');
		if (currentQty < 999) {
			txtOrderQty.attr('value', parseInt(currentQty) + 1);
		}

		setPreCartItemTotalPrice(li_preCart, li_preCart.attr('sellPrice'), txtOrderQty.attr('value'));
	}

	function setPreCartItemTotalPrice(li_preCart, sellPrice, orderQty) {
		var totalItemPrice = sellPrice * orderQty;
		li_preCart.find('#preCartItemTotalPrice').text(addCommars(totalItemPrice));

		setPreCartItemTotalPriceSum();
		setVisiblePreCartLayer();
	}

	function setPreCartItemTotalPriceSum() {
		var itemTotalPriceSum = 0;
		$('[id=preCartItemTotalPrice]').each(function (index, element) {
			var itemTotalPrice = $(element).text().replace(/,/gi, "");

			if ($.isNumeric(itemTotalPrice)) {
				itemTotalPriceSum = parseInt(itemTotalPriceSum) + parseInt(itemTotalPrice);
			}
		});
		$('#preCartItemTotalPriceSum').text(addCommars(itemTotalPriceSum));
	}

	function removeItemFromPreCart(obj) {
		var li_preCart = $(obj).closest('[id^=li_preCart]');
		li_preCart.remove();

		// checked 표시 해지
		var itemNo = li_preCart.attr('itemNo');
		$('[id=li_menu][itemNo=' + itemNo + ']').find('#btn_addList').toggleClass('checked');
		$('[id=li_hot_menu_item][itemNo=' + itemNo + ']').find('#btn_addList').toggleClass('checked');

		setPreCartItemTotalPriceSum();
		setVisiblePreCartLayer();
	}

	function setVisiblePreCartLayer() {
		if ($('[id^=li_preCart][id!=li_preCartTemplete]').length > 0) {
			$('#divPreCart').show();
		}
		else {
			$('#divPreCart').hide();
		}
	}

	function togglePreview(obj) {
		$(obj).toggleClass('selected');
		$('#bot_lst_wrap').toggle();
	}

	function orderPreCart() {

		if (!isLogin() || !isMember()) { goLogin(); }

		var cartPID = '';   // 장바구니에 담기지 못했을 경우 삭제해 주기 위한 값
		var orderIdxArray = new Array();
		var orderIdxArray16 = new Array();
		var isOk = true;
		$('[id^=li_preCart][id!=li_preCartTemplete]').each(function(idx, element) {
			var itemNo = $(element).attr('itemNo');
			var orderQty = $(element).find('#txtOrderQty').attr('value');

			var orderIdx;
			var retData = GetAddCartResult(itemNo, orderQty);

			if (retData != "undefined" && retData != null && retData.ResultCode == 0) {
				orderIdx = retData.Data.OrderIdx;
				orderIdxArray16.push(parseInt(orderIdx).toString(16));
				orderIdxArray.push(parseInt(orderIdx));
				
				cartPID = retData.Data.CartPID;  // 정상인경우 담는다
			}
			else {
				// 장바구니에 담다가 오류(구매갯수 초과등)가 발생한 경우에는 이미 담겼던 물품을 삭제하는 api 호출
				isOk = false;

				if (cartPID != "" && orderIdxArray.length > 0) {

					var param = {
						cartPID: cartPID
						, orderIdxString : orderIdxArray.join(',')
					}

					$.ajax({
						url : "/ecoupon/GetRemoveCartResult"
						, type : 'POST'
						, async : false
						, data : param
						, success : function( retData ) {
								if (retData.ResultCode != 0) {  // 오류
									//N/A by Design
									//alert(retData.Message);
								}
								else {
									//alert('삭제성공');
								}
							}
						, error : function(e) {
								// N/A by Design
								//alert('삭제시에러발생');
						}
					});
				}

				return false; // 빠져나감
			}
		});

		if (isOk) {
			@{
                string OrderUrl = Urls.MescrowUrl;
                OrderUrl = OrderUrl.Replace("http://", "https://");
			}
			document.location.href = '@OrderUrl/ko/order?orderIdx=' + encodeURIComponent(orderIdxArray16.join(','));
		}
	}

	function isLogin() {
@{
    if (PageAttr.IsLogin == false)
    {
			@:return false;
		}
    else
    {
			@:return true;
		}
}
	}


	function isMember(){
@{
    if (PageAttr.IsMember == false)
    {
			@:return false;
		}
    else
    {
			@:return true;
		}
}		
	}



	function goLogin()
	{
		var currentUrl = document.location.href;
		document.location.href = "@(Urls.MemberOnlyLoginUrl)&url=" + encodeURIComponent(currentUrl);
	}

	function GoVip(url)
	{
		if (!url) {
			alert('상품준비중입니다.');
			return;
		}

		/*
		if (!isLogin())
		{
			goLogin();
			return;
		}
		*/

		window.location.href = url;
	}

	function addCommars(nStr) {
		nStr += '';
		x = nStr.split('.');
		x1 = x[0];
		x2 = x.length > 1 ? '.' + x[1] : '';
		var rgx = /(\d+)(\d{3})/;
		while (rgx.test(x1)) {
			x1 = x1.replace(rgx, '$1' + ',' + '$2');
		}
		return x1 + x2;
	}

	var url = "Intent://CreateGService_Shortcut?page=ecoupon#Intent;action=android.intent.action.VIEW;category=android.intent.category.BROWSABLE;scheme=gmarket;package=com.ebay.kr.gmarket;end";
	function getAndroidVersion() {
		var androidVersion = -1; // def value, for non-Android devices
		var ua = navigator.userAgent.toLowerCase();
		var androidIndex = ua.indexOf('android');

		if (androidIndex != -1) {
			var versionStartIndex = androidIndex + 8;
			var versionEndIndex = ua.indexOf(';', versionStartIndex);

			androidVersion = parseFloat(ua.slice(versionStartIndex, versionEndIndex));
		}

		return androidVersion;
	}

	function checkApplicationInstall() {
		if (getAndroidVersion() >= 4.3) window.location.href = url;
		else {
			var iframe = document.createElement("iframe");
			iframe.id = "checkframe";
			iframe.name = "checkframe";
			iframe.style.width = "0px";
			iframe.style.height = "0px";
			iframe.style.display = "none";
			document.body.appendChild(iframe);

			document.checkframe.location = "gmarket://CreateGService_Shortcut?page=ecoupon";
			setTimeout("checkApplicationInstall_callback()", 500);
		}
	}

	function checkApplicationInstall_callback() {
		try {

			var s = document.checkframe.document.body.innerHTML;
			$("#checkframe").remove();
		} catch (e) {
			document.location = "market://details?id=com.ebay.kr.gmarket";
		}
	}

	function sendScheme() {

		var appVersion = checkAppVersion();

		if (appVersion != '' && parseInt(appVersion) <= 340) {
			if (confirm("고객님 G마켓 앱의 업데이트가 필요합니다.") == false) {
				return;
			} else {
				document.location = "market://details?id=com.ebay.kr.gmarket";
			}
		}
		else {
			var iframe = document.createElement("iframe");
			iframe.id = "checkframe";
			iframe.name = "checkframe";
			iframe.style.width = "0px";
			iframe.style.height = "0px";
			iframe.style.display = "none";
			document.body.appendChild(iframe);

			document.checkframe.location = "gmarket://CreateGService_Shortcut?page=ecoupon";
			setTimeout("checkApplicationInstall_callback2()", 500);
		}
	}

	function checkApplicationInstall_callback2() {
		try {

			var s = document.checkframe.document.body.innerHTML;
			$("#checkframe").remove();
		} catch (e) {

		}
	}

	function checkAppVersion() {
		var sName = "appversion";
		var aCookie = document.cookie.split("; ");

		for (var i = 0; i < aCookie.length; i++) {
			var aCrumb = aCookie[i].split("=");
			if (sName == aCrumb[0])
				return unescape(aCrumb[1]);
		}
		return null;
	}

</script>


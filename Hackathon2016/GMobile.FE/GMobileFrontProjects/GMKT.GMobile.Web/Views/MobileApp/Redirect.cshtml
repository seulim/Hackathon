@{
	Layout = null;

	string page = Request["page"];
	if ( page == null )
	{
		page = "";
	}

	string kind = "ContractList";

	string storeURL = "";
	string appScheamHeader = "msgAppRoute";

	if (PageAttr.IsIphone)
	{
		storeURL = "http://itunes.apple.com/kr/app/gmarket/id340330132?mt=8";
		appScheamHeader = "msgAppRoute";
	}
	else if ( PageAttr.IsAndroid )
	{
		storeURL = "market://market.android.com/details?id=com.ebay.kr.gmarket";
		appScheamHeader = "msgApp_Route";
	}

	if ( "orderlist".Equals( page.ToLower().Trim() ) )
	{
		kind = "ContractList";
		if (PageAttr.IsAndroid)
		{
			appScheamHeader = "msgAppRoute";
		}
	}
	else if ( "questionlist".Equals( page.ToLower().Trim() ) )
	{
		kind = "QuestionList";
	}

	string appScheme = "gmarket://" + appScheamHeader + "?kind=" + kind;

	string appSchemeForLatestAndroid = "Intent://" + appScheamHeader + "?kind=" + kind + 
		"#Intent;action=android.intent.action.VIEW;category=android.intent.category.BROWSABLE;scheme=gmarket;package=com.ebay.kr.gmarket;end";

	//string alternativeURL = "https://mmyg.gmarket.co.kr/ContractList/ContractList";
}

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="ko" xml:lang="ko">
<head>
	<meta http-equiv="content-Type" content="text/html; charset=utf-8" /> 
	<title>test appstore</title>
	<script type="text/javascript" src="@Urls.ScriptUrl/js/mobile/main/common/jquery-1.7.1.min.js"></script>
</head>
<body>
	<div id="div_app">
		<h1>G마켓 앱으로 연결중입니다.</h1>
	</div>

	<iframe id="checkframe" name="checkframe" width="0" height="0" style="display:none;"></iframe>


	<script type="text/javascript">
		var appSchemeForLatestAndroid = "@appSchemeForLatestAndroid";

		var ua = navigator.userAgent.toLowerCase();
		var isAndroid = ua.indexOf("android") > -1;

		var isIphone = @(PageAttr.IsIphone ? "true":"false");

		function getAndroidVersion() {
			var androidVersion = -1; // def value, for non-Android devices
			var ua = navigator.userAgent.toLowerCase();
			var androidIndex = ua.indexOf('android');

			if (androidIndex != -1) {
				var versionStartIndex = androidIndex + 8;
				var versionEndIndex = ua.indexOf(';', versionStartIndex);

				androidVersion = parseFloat(ua.slice(versionStartIndex, versionEndIndex));
			}

			return androidVersion;
		}

		function checkApplicationInstall() {

				document.checkframe.location = "@appScheme";
				setTimeout("checkApplicationInstall_callback()", 500);

		}

		function checkApplicationInstall_callback() {
			try {
				
				if ( isIphone )
					document.location = '@storeURL';
				else
					var s = document.checkframe.document.body.innerHTML;

			} catch (e) {

				$.browser.chrome = /chrom(e|ium)/.test(navigator.userAgent.toLowerCase()); 

				if ( $.browser.chrome /*&& getAndroidVersion() >= 4.3*/) {
					window.location.href = appSchemeForLatestAndroid;
				}
				else if ( isAndroid )
				{
					window.location.href = '@storeURL';
				}
				else if ( isIphone ){
					document.location = '@storeURL';
				}
				else
				{
					alert('지원하지 않는 단말기입니다.');
				}
			}
		}

		$(document).ready(function () {
			checkApplicationInstall();
		});
	</script>
</body>
</html>